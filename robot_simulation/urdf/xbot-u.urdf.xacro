<?xml version="1.0"?>
<robot xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
  xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
  xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
  xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:macro name="xbot2_base">
  <link name="base_footprint"/>
  <joint name="base_footprint_to_base" type="fixed">
    <axis rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  
  <link name="base_link">
    <inertial>
      <origin rpy="0 0 0" xyz="-0.015 0.0 0.0014" />
      <mass value="35" />
      <inertia ixx="0.6125" ixy="0.00495" ixz="0.0031" iyy="0.6426" iyz="-0.0017" izz="0.494" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find robot_simulation)/models/meshes/base_link.obj" />
      </geometry>
    </visual>

    <collision name="front_omniwheel">
      <origin xyz="0.18 0 0.02" rpy="0 0 0" />
      <geometry>
        <sphere radius="0.019"/>
      </geometry>
    </collision>
    <collision name="back_omniwheel">
      <origin xyz="-0.18 0 0.02" rpy="0 0 0" />
      <geometry>
        <sphere radius="0.019"/>
      </geometry>
    </collision>
    <collision name="collision1">
      <origin xyz="0.0 0 0.135" rpy="0 0 0" />
      <geometry>
        <cylinder length="0.15" radius="0.25"/>
      </geometry>
    </collision>
    <collision name="collision2">
      <origin xyz="0.03 0 0.25" rpy="0 0 0" />
      <geometry>
        <cylinder length="0.08" radius="0.045"/>
      </geometry>
    </collision>
    <collision name="collision3">
      <origin xyz="0 0 0.68" rpy="0 0 0" />
      <geometry>
        <cylinder length="0.8" radius="0.08"/>
      </geometry>
    </collision>
    <collision name="collision4">
      <origin xyz="0 0 1.135" rpy="0 0 0" />
      <geometry>
        <box size="0.04 0.17 0.09"/>
      </geometry>
    </collision>
  </link>

  <link name="laser_mount_link"/>
  <joint name="base_to_laser" type="fixed">
    <axis rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="laser_mount_link"/>
    <origin rpy="0 0 0" xyz=".114 0 .17"/>
  </joint>

  <link name="imu_link"/>

  <joint name="base_to_imu" type="fixed">
    <axis rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin rpy="0 0 0" xyz="0 0 .2"/>
  </joint>

  <link name="left_wheel">
    <collision name="collision">
      <origin xyz="0 0 0" rpy="1.57079632 0 0"/>
      <geometry>
        <cylinder radius="0.095" length="0.05"/>
      </geometry>
    </collision>
    <visual name="left_wheel_visual">
      <origin xyz="0 0 0" rpy="0 0 -1.57079632"/>
      <geometry>
        <mesh filename="file://$(find robot_simulation)/models/meshes/wheel.obj" />
      </geometry>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="4.3542" />
      <inertia ixx="0.0045" ixy="0" ixz="0" iyy="0.005" iyz="0" izz="0.0045" />
    </inertial>
  </link>

  <joint type="continuous" name="left_wheel_hinge">
    <axis xyz="0 1 0" rpy="0 0 0"/>
    <origin xyz="0 0.23 .095" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <limit effort="6" velocity="5.0"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>

  <link name="right_wheel">
    <collision name="collision">
      <origin xyz="0 0 0" rpy="-1.57079632  0 0"/>
      <geometry>
        <cylinder radius="0.095" length="0.05"/>
      </geometry>
    </collision>
    <visual name="right_wheel_visual">
      <origin xyz="0 0 0" rpy="0 0 1.57079632"/>
      <geometry>
        <mesh filename="file://$(find robot_simulation)/models/meshes/wheel.obj" />
      </geometry>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <mass value="4.3542" />
      <inertia ixx="0.0045" ixy="0" ixz="0" iyy="0.005" iyz="0" izz="0.0045" />
    </inertial>
  </link>

  <joint type="continuous" name="right_wheel_hinge">
    <axis xyz="0 1 0" rpy="0 0 0"/>
    <origin xyz="0 -0.23 .095" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <limit effort="6" velocity="5.0"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>

  <link name="yaw_platform">
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 1.57079632" />
      <geometry>
        <mesh filename="file://$(find robot_simulation)/models/meshes/yaw_platform.obj" />
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 1.57079632" />
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
  </link>

  <joint name="base_to_yaw_platform" type="revolute">
    <axis xyz="0 0 1"/>
    <parent link="base_link"/>
    <child link="yaw_platform"/>
    <origin rpy="0 0 0" xyz="0 0 1.305"/>
    <limit effort="100" velocity="100" lower="-1.57" upper="1.57" />
    <dynamics damping="0.0" friction="10.0"/>
  </joint>

  <link name="pitch_platform">
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find robot_simulation)/models/meshes/pitch_platform.obj" />
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
  </link>

  <joint name="yaw_to_pitch_platform" type="revolute">
    <axis xyz="0 1 0"/>
    <parent link="yaw_platform"/>
    <child link="pitch_platform"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <limit effort="100" velocity="100" lower="-1.57" upper="1.57" />
    <dynamics damping="0.0" friction="10.0"/>
  </joint>

  <!-- Camera -->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <!--<mesh filename="package://robot_sim_demo/models/meshes/xtion_pro_camera.dae" />-->
        <mesh filename="file://$(find robot_simulation)/models/meshes/realsense.obj" />
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="-0.005 0 .06" rpy="0 0 0"/>
    <parent link="pitch_platform"/>
    <child link="camera_link"/>
  </joint>

  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
      so that ros and opencv can operate on the camera frame correctly -->
  <joint name="camera_optical_joint" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
        won't be aligned properly with the frame it is supposedly originating from -->
    <origin xyz="0 0 0" rpy="-1.5708 0 -1.5708"/>
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
  </joint>

  <link name="camera_link_optical">
  </link>

  <transmission name="tran1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="base_to_yaw_platform">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="yaw_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="tran2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="yaw_to_pitch_platform">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="pitch_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

   <ros2_control name="GazeboSimSystem" type="system">
    <hardware>
      <plugin>gz_ros2_control/GazeboSimSystem</plugin>
    </hardware>
    <joint name="base_to_yaw_platform">
      <command_interface name="effort"/>
      <!-- <state_interface name="position"/>
      <state_interface name="velocity"/> -->
      <state_interface name="effort"/>
    </joint>
    <joint name="yaw_to_pitch_platform">
      <command_interface name="effort"/>
      <!-- <state_interface name="position"/>
      <state_interface name="velocity"/> -->
      <state_interface name="effort"/>
    </joint>
  </ros2_control>

  <gazebo>
    <plugin filename="libgz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
      <parameters>$(find robot_simulation)/param/xbot-u_control.yaml</parameters>
      <robot_param>robot_description</robot_param>
      <robot_param_node>robot_state_publisher</robot_param_node>
      <controller_manager_prefix_node_name>controller_manager</controller_manager_prefix_node_name>
    </plugin>
  </gazebo>

  <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>imu</topic>
      <imu>
        <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </z>
          </linear_acceleration>
      </imu>
    </sensor>
  </gazebo>

  <gazebo reference="camera_link">
    <sensor type="rgbd_camera" name="camera_D415_point">
      <updateRate>30.0</updateRate>
      <alwaysOn>true</alwaysOn>
      <visualize>true</visualize>
      <topic>camera/depth</topic>
      <gz_frame_id>camera_link</gz_frame_id>
      <camera name="head">
        <horizontal_fov>1.05</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>10.0</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.005</stddev>
        </noise>
        <baseline>0.1</baseline>
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
        <pointCloudCutoff>0.05</pointCloudCutoff>
        <rangeMax>4.0</rangeMax>
      </camera>
    </sensor>
  </gazebo>

  <gazebo>
    <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
        <odom_topic>odom</odom_topic>
        <frame_id>odom</frame_id>
        <topic>cmd_vel</topic>
        <alwaysOn>true</alwaysOn>
        <odom_publisher_frequency>20</odom_publisher_frequency>
        <left_joint>left_wheel_hinge</left_joint>
        <right_joint>right_wheel_hinge</right_joint>
        <wheel_separation>0.46</wheel_separation>
        <wheel_radius>0.19</wheel_radius>
        <tf_topic>/tf_diff</tf_topic>
        <child_frame_id>base_footprint</child_frame_id>
    </plugin>
  </gazebo>
  
  <gazebo reference="base_link">
    <mu>0</mu>
    <mu2>0</mu2>
    <kp>100000000.0</kp>
    <kd>10000.0</kd>
  </gazebo>

  <gazebo reference="laser">
  </gazebo>

  <gazebo reference="right_wheel">
    <mu>10</mu>
    <mu2>10</mu2>
    <kp>100.0</kp>
    <kd>10.0</kd>
  </gazebo>

  <gazebo reference="left_wheel">
    <mu>10</mu>
    <mu2>10</mu2>
    <kp>100.0</kp>
    <kd>10.0</kd>
  </gazebo>

  <gazebo reference="yaw_platform">
    <mu>.5</mu>
    <mu2>.5</mu2>
  </gazebo>

  <gazebo reference="pitch_platform">
    <mu>.5</mu>
    <mu2>.5</mu2>
  </gazebo>

  
  <gazebo>
    <plugin filename="gz-sim-joint-state-publisher-system" name="gz::sim::systems::JointStatePublisher">
        <topic>joint_states</topic>
        <!-- <update_rate>30</update_rate> -->
        <joint_name>left_wheel_hinge</joint_name>
        <joint_name>right_wheel_hinge</joint_name>
        <joint_name>base_to_yaw_platform</joint_name>
        <joint_name>yaw_to_pitch_platform</joint_name>
    </plugin>
  </gazebo>  

  </xacro:macro>
</robot>